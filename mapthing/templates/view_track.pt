<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:tal="http://xml.zope.org/namespaces/tal">
<head>
    <title>View Track</title>
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/>
    <meta name="keywords" content="" />
    <meta name="description" content="" />
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/themes/ui-lightness/jquery-ui.css" />
    <link rel="shortcut icon" href="${request.static_url('mapthing:static/favicon.ico')}" />
    <link rel="stylesheet" href="${request.static_url('mapthing:static/pylons.css')}" type="text/css" media="screen" charset="utf-8" />
    <link rel="stylesheet" href="${request.static_url('mapthing:static/css/jquery.ui.timerange.css')}" type="text/css" charset="utf-8" />
    <!--[if lte IE 6]>
    <link rel="stylesheet" href="${request.static_url('mapthing:static/ie6.css')}" type="text/css" media="screen" charset="utf-8" />
    <![endif]-->
    <script src="http://openlayers.org/api/OpenLayers.js"></script>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
    <script src="${request.static_url('mapthing:static/mapstraction/source/mxn.js')}?(googlev3)" type="text/javascript"></script>
    <script src="${request.static_url('mapthing:static/timemap/lib/timeline-1.2.js')}" type="text/javascript"></script>
    <script src="${request.static_url('mapthing:static/timemap/src/timemap.js')}" type="text/javascript"></script>
    <script src="${request.static_url('mapthing:static/js/jquery.ui.timerange.js')}" type="text/javascript"></script>
    <script src="${request.static_url('mapthing:static/js/moment.min.js')}" type="text/javascript"></script>
    <style>
        #map { height: 400px; }
    </style>
    <script type="text/javascript">
        $('timerange_ul').timerange();
    </script>
</head>
<body>
    <div id="timerange_json">
    </div>
    <div id="timerange_ul">
        <ul>
            <li data-start="2013-01-01 5:50am" data-end="2013-02-05 2:03am"></li>
            <li data-start="2013-01-02" data-length="50 minutes"></li>
        <ul>
    </div>
   	<div id="datepicker"></div>
   	<div id="map"></div>
   	<div id="timeline"></div>
    <script type="text/javascript">
        var json_points = ${json_points};
        var tracks = ${json_tracks};
        var segments = ${json_segments};
        //var points = ${points};
    </script>
	<script type="text/javascript">
    var seglist = {};
    var map = new mxn.Mapstraction('map', 'googlev3'); 
    $(function() {
        /*
        tm = TimeMap.init({
            mapId: "map",               // Id of map div element (required)
            timelineId: "timeline",     // Id of timeline div element (required)
            options: {},
            datasets: [],
        });
        */

        map.enableScrollWheelZoom();
        map.addControls({
            scale:true,
            map_type:true,
        });
        show_points();
        make_seglist();
		map.polylineCenterAndZoom();

        $('#seg_list').on('mouseover','li a',function() {
            segid = $(this).data('segid');
            $.each(seglist[segid], function(idx, seg) {
                seg.oldcolor = seg.color;
                seg.setColor('#0000FF');
                seg.setWidth('6');
                seg.update();
            })
        });
        $('#seg_list').on('mouseout','li a',function() {
            segid = $(this).data('segid');
            $.each(seglist[segid], function(idx, seg) {
                seg.setColor(seg.oldcolor);
                seg.setWidth('4');
                seg.update();
            })
        });
        $('#seg_list').timerange({
            range: true,
            change: function(evt, ui) {
                show_points(ui.values);
            },
        });
    });

    function make_seglist() {
        for(segid in json_points) {
            starttime = moment(segments[segid].start_time/1000,'X');
            endtime = moment(segments[segid].end_time/1000,'X');
            newli = $('<li></li>');
            newli.append('<a href="#" data-segid="' + segid + '">' + tracks[segments[segid].track_id].name + ' (' + segid + ') (' + starttime.format('YYYY/MM/DD h:mm') + '-' + endtime.format('YYYY/MM/DD h:mm') + ')</a>');
            newli.attr('data-start',starttime.format());
            newli.attr('data-end',endtime.format());
            $('#seg_list').append(newli);
        }
    }

    function show_points(timerange) {
        mintime = maxtime = false;
        if(timerange) {
            mintime = timerange[0];
            maxtime = timerange[1];
        }
        var points = Array();
        var curseg;
        seglist = {};
        newpolys = [];
        for(segid in json_points) {
            last_color = false;
            curseg = Array();
            for(idx in json_points[segid]) {
                //console.log([mintime, maxtime, json_points[segid][idx].time]);
                if((mintime && json_points[segid][idx].time/1000 < mintime)
                    || (maxtime && json_points[segid][idx].time/1000 > maxtime)
                ) { continue; }

                curpoint = json_points[segid][idx];
                if(last_color && curpoint.color != last_color) {
                    //Add the current point so they're connected
                    points.push(new mxn.LatLonPoint(json_points[segid][idx].lat, json_points[segid][idx].lon)) 
                    newline = new mxn.Polyline(points);
                    newline.setColor(last_color);
                    newline.setWidth('4');
                    curseg.push(newline);
                    points = [];
                }
                last_color = curpoint.color;
                points.push(new mxn.LatLonPoint(json_points[segid][idx].lat, json_points[segid][idx].lon)) 
            }
            if(points.length) {
                points.push(new mxn.LatLonPoint(json_points[segid][idx].lat, json_points[segid][idx].lon)) 
                newline = new mxn.Polyline(points);
                newline.setColor(last_color);
                newline.setWidth('4');
                curseg.push(newline);
                points = [];
            }
            if(curseg.length) { seglist[segid] = curseg; }
        }
        map.removeAllPolylines();
        for(segid in seglist) {
            for(subseg in seglist[segid]) {
                map.addPolyline(seglist[segid][subseg]);
            }
        }
    }
	</script> 
    <ul id="seg_list">
    </ul> 
</body>
</html>
