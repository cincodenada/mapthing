<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:tal="http://xml.zope.org/namespaces/tal">
<head>
    <title>View Track</title>
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/>
    <meta name="keywords" content="" />
    <meta name="description" content="" />
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/themes/ui-lightness/jquery-ui.css" />
    <link rel="shortcut icon" href="${request.static_url('mapthing:static/favicon.ico')}" />
    <link rel="stylesheet" href="${request.static_url('mapthing:static/pylons.css')}" type="text/css" media="screen" charset="utf-8" />
    <link rel="stylesheet" href="${request.static_url('mapthing:static/css/jquery.ui.timerange.css')}" type="text/css" charset="utf-8" />
    <!--[if lte IE 6]>
    <link rel="stylesheet" href="${request.static_url('mapthing:static/ie6.css')}" type="text/css" media="screen" charset="utf-8" />
    <![endif]-->
    <script src="http://openlayers.org/api/OpenLayers.js"></script>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
    <script src="${request.static_url('mapthing:static/mapstraction/source/mxn.js')}?(googlev3)" type="text/javascript"></script>
    <script src="${request.static_url('mapthing:static/js/jquery.ui.timerange.js')}" type="text/javascript"></script>
    <script src="${request.static_url('mapthing:static/js/moment.min.js')}" type="text/javascript"></script>
    <style>
        #map { height: 400px; }
        #sel_view {
            height: 1em;
            border: 1px solid;
            width: 100%;
            clear: both;
        }
        #sel_view canvas {
            width: 100%;
            height: 100%;
            position: relative;
            top: -3px;
        }
    </style>
</head>
<body>
    <div id="timerange_json">
    </div>
    <div id="timerange_ul">
        <ul>
            <li data-start="2013-01-01 5:50am" data-end="2013-02-05 2:03am"></li>
            <li data-start="2013-01-02" data-length="50 minutes"></li>
        <ul>
    </div>
   	<div id="datepicker"></div>
   	<div id="map"></div>
   	<div id="timeline"></div>
    <script type="text/javascript">
        var params = ${json_params};
        var point_data;
    </script>
	<script type="text/javascript">
    var seglist = {};
    var map = new mxn.Mapstraction('map', 'googlev3'); 
    var canvas, dc;
    $(function() {
        /*
        tm = TimeMap.init({
            mapId: "map",               // Id of map div element (required)
            timelineId: "timeline",     // Id of timeline div element (required)
            options: {},
            datasets: [],
        });
        */
        canvas = document.getElementById('sel_view').firstElementChild;
        canvas.width = $(canvas).innerWidth();
        canvas.height = $(canvas).innerHeight();
        dc = canvas.getContext('2d');

        map.enableScrollWheelZoom();
        map.addControls({
            scale:true,
            map_type:true,
        });
        //show_points();
        $.get('/tracks.json/' + params.start + '/' + params.end, function(data) {
            bounds = make_tracklist(data);
            map.setBounds(bounds);

            $('#seg_list').timerange({
                change: function(evt, ui) {
                    $('#sel_view').timerange({
                        min: ui.values[0],
                        max: ui.values[1],
                        change: function(evt, ui) {
                            update_mapview(ui.values);
                        }
                    });
                    update_selview(ui.values);
                },
            });
        }, 'json')
		//map.polylineCenterAndZoom();

        $('#seg_list').on('mouseover','li a',function() {
            segid = $(this).data('segid');
            $.each(seglist[segid], function(idx, seg) {
                seg.oldcolor = seg.color;
                seg.setColor('#0000FF');
                seg.setWidth('6');
                seg.update();
            })
        });
        $('#seg_list').on('mouseout','li a',function() {
            segid = $(this).data('segid');
            $.each(seglist[segid], function(idx, seg) {
                seg.setColor(seg.oldcolor);
                seg.setWidth('4');
                seg.update();
            })
        });
    });

    function update_selview(timerange) {
        starttime = moment(timerange[0],'X');
        endtime = moment(timerange[1],'X');
        $.get('/points.json/' + starttime.format('YYYY-MM-DD HH:mm:ss') + '/' + endtime.format('YYYY-MM-DD HH:mm:ss'), function(data) {
            point_data = data;
            draw_selview(timerange);
        }, 'json');
    }

    function update_mapview(timerange) {
        draw_mapview(timerange);
        map.polylineCenterAndZoom();
    }

    function make_seglist() {
        $('#seg_list').empty();
        for(segid in json_points) {
            starttime = moment(segments[segid].start_time/1000,'X');
            endtime = moment(segments[segid].end_time/1000,'X');
            newli = $('<li></li>');
            newli.append('<a href="#" data-segid="' + segid + '">' + tracks[segments[segid].track_id].name + ' (' + segid + ') (' + starttime.format('YYYY/MM/DD h:mm') + '-' + endtime.format('YYYY/MM/DD h:mm') + ')</a>');
            newli.attr('data-start',starttime.format());
            newli.attr('data-end',endtime.format());
            $('#seg_list').append(newli);
        }
    }

    function make_tracklist(tracklist) {
        bounds = new mxn.BoundingBox();
        $('#seg_list').empty();
        for(idx in tracklist) {
            trackdata = tracklist[idx];
            //Parse our dates
            starttime = moment(trackdata.start/1000,'X');
            endtime = moment(trackdata.end/1000,'X');

            //Extend bounds
            bounds.extend({lat: trackdata.minlat, lon: trackdata.minlon});
            bounds.extend({lat: trackdata.maxlat, lon: trackdata.maxlon});

            //Add the list item
            newli = $('<li></li>');
            newli.append('<a href="#" data-trackid="' + trackdata.id + '"> (' + trackdata.id + ') (' + starttime.format('YYYY/MM/DD h:mm') + '-' + endtime.format('YYYY/MM/DD h:mm') + ')</a>');
            newli.attr('data-start',starttime.format());
            newli.attr('data-end',endtime.format());
            $('#seg_list').append(newli);
        }

        return bounds;
    }

    function draw_selview(timerange) {
        if(timerange) {
            mintime = timerange[0];
            maxtime = timerange[1];
        } else {
            return false;
        }

        dc.fillStyle = "rgba(0,0,0,0.2)";
        dc.clearRect(0,0,canvas.width,canvas.height);

        for(segid in point_data.points) {
            segdata = point_data.segments[segid];
            for(idx in point_data.points[segid]) {
                curtime = point_data.points[segid][idx].time/1000;
                if((mintime && (curtime < mintime))
                    || (maxtime && (curtime > maxtime))
                ) { continue; }

                xpos = (curtime-mintime)/(maxtime-mintime)*canvas.width;
                dc.fillRect(xpos,0,1,canvas.height);
            }
        }
    }

    function draw_mapview(timerange) {
        var points = Array();
        var curseg;
        var mintime = false, maxtime = false;
        if(timerange) {
            mintime = timerange[0];
            maxtime = timerange[1];
        }
        seglist = {};
        newpolys = [];

        for(segid in point_data.points) {
            segdata = point_data.segments[segid];
            last_color = false;
            curseg = Array();

            for(idx in point_data.points[segid]) {
                //console.log([mintime, maxtime, point_data.points[segid][idx].time]);
                curtime = point_data.points[segid][idx].time/1000;
                //console.log(curtime);
                //console.log((curtime > maxtime));
                if((mintime && (curtime < mintime))
                    || (maxtime && (curtime > maxtime))
                ) { continue; }

                curpoint = point_data.points[segid][idx];
                if(last_color && curpoint.color != last_color) {
                    //Add the current point so they're connected
                    points.push(new mxn.LatLonPoint(point_data.points[segid][idx].lat, point_data.points[segid][idx].lon)) 
                    newline = new mxn.Polyline(points);
                    newline.setColor(last_color);
                    newline.setWidth('4');
                    curseg.push(newline);
                    points = [];
                }
                last_color = curpoint.color;
                points.push(new mxn.LatLonPoint(point_data.points[segid][idx].lat, point_data.points[segid][idx].lon)) 
            }
            if(points.length) {
                points.push(new mxn.LatLonPoint(point_data.points[segid][idx].lat, point_data.points[segid][idx].lon)) 
                newline = new mxn.Polyline(points);
                newline.setColor(last_color);
                newline.setWidth('4');
                curseg.push(newline);
                points = [];
            }
            if(curseg.length) { seglist[segid] = curseg; }
        }
        map.removeAllPolylines();
        for(segid in seglist) {
            for(subseg in seglist[segid]) {
                map.addPolyline(seglist[segid][subseg]);
            }
        }
    }
	</script> 
    <ul id="seg_list">
    </ul> 
    <div id="sel_view">
        <canvas></canvas>
    </div>
</body>
</html>
